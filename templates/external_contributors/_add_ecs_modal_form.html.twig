{% form_theme ecsForm 'bootstrap_4_layout.html.twig' %}

<!-- ECS Form Display (in a Modal Box) -->

{# ECS stands for External Contributors Structures #}

{# Set some predefined title chunks #}

{% set predefinedTitleChunks = [ 
    
    { 'name': 'Sponsors'},
    
    { 'name': 'Remerciements'},
    
    { 'name': 'Donateurs'},
    
    { 'name': 'Partenaires'},
    
    { 'name': 'Mécènes'},
    
    { 'name': 'Ambassadeurs'},
    
    { 'name': 'Amis'},
    
    { 'name': 'Conseillers'},
    
    { 'name': 'Fournisseurs'},
    
    { 'name': 'Crédits'},
    
    { 'name': 'Supporters'},
    
    { 'name': 'Contributeurs ponctuels'},
    
    { 'name': 'Financeurs'}, 
    
    { 'name': 'Investisseurs'},
    
    ] %}
    
<!-- Display add new ECS Form (in a Modal Box) -->

<div class="modal" id="addECSFormModal" tabindex="-1" role="dialog" aria-labelledby="addECSModalLabel" aria-hidden="true">

    <div class="modal-dialog modal-lg" role="">

        <div class="modal-content">

            <!-- Modal Header -->

            <div class="modal-header">

                <!-- Help button (trigger a collapsible) -->

                <a class="font-weight-bold my-1" type="button" data-toggle="collapse" data-target="#collapseECSTitleHelp" aria-expanded="false" aria-controls="collapseECSTitleHelp">

                    <span class="btn btn-light fs-15 h5 sharp p-1 px-3" style="letter-spacing: 2px;">Aide</span>
                    
                </a>

                <!-- Collapsible Help Container -->
        
                <div class="collapse col-md-7 mt-0" id="collapseECSTitleHelp">
        
                    <p class="h5 ml-md-2">
        
                        Sélectionnez un ou plusieurs boutons (ou écrivez votre titre personnalisé dans la zone résultat).
        
                    </p>
        
                </div>

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">

                    <span aria-hidden="true">&times;</span>

                </button>

            </div>

            <!-- Modal Body -->

            <div class="modal-body">

                <div>

                    <h4 class="font-weight-bold mb-3">Composer / écrire un titre</h4>

                    <div>

                        {% for titleChunk in predefinedTitleChunks %}
                        
                            <button type="button" class="titleChunkSuggestion btn btn-light mb-2" data-toggle="button" aria-pressed="false">{{titleChunk.name}}</button>

                        {% endfor %}

                    </div>
                    
                </div>

                {{ form_start(ecsForm) }}

                <div class="mt-3 mb-3 font-weight-bold">

                    {{ form_row(ecsForm.title, { 'id': 'liveTitleRendering', 'value' : ''}  ) }} 

                </div>

            </div>

            <!-- Modal Footer -->

            <div class="modal-footer">

                <button type="button" class="btn btn-lg btn-info sharp font-weight-bold" data-dismiss="modal">Retour</button>         

                <button class="btn btn-lg btn-success sharp bg-green font-weight-bold">Valider</button>
                
            </div>

            <div class="d-none">
                {{ form_rest(ecsForm) }}
            </div>

            {{ form_end(ecsForm) }}

        </div>

    </div>

</div>



<style>

    .titleChunkSuggestion[aria-pressed="true"]{

            background-color:yellow !important;
    
    }

    #liveTitleRendering{
        color:black;
    }

</style>


<!-- sortable plugin in order to reorder Documents -->

<script src="/js/sortable/sortable.min.js"></script>

<!-- jQuerySupport for this sortable plugin -->

<script src="/js/sortable/jquery-sortable.js"></script>

<script>


    $(document).ready(function(){

        // manage ECS Live title Rendering
    
        var ecsTitle='';
    
        $(".titleChunkSuggestion").click(function(){
    
    //$(this).toggleClass("SelectedButton");
    
            //$("#ConfirmSelection").show();
    
            //document.getElementById("liveTitleRendering").focus(); 
            
            ecsTitle=$("#liveTitleRendering").val();
    
            //console.log($("#liveTitleRendering").val());
    
            //console.log(ecsTitle);
                     
    if(!$(this).hasClass("active")) // we push a button
    {
    
                if(ecsTitle=='')
                {
                    ecsTitle = $(this).text();
    
                }
    
                else{
    
                    ecsTitle = ecsTitle + ' - ' + $(this).text();
                }
    
    }
    
    else // we unpush a button, we got to remove its text
    {
                
                ecsTitle = ecsTitle.replace(' - ' + $(this).text(), "");
                
                ecsTitle = ecsTitle.replace($(this).text() + ' - ', "");
                
                ecsTitle = ecsTitle.replace($(this).text(), "");
    
            }
    
            $("#liveTitleRendering").val(ecsTitle);
    
            return ecsTitle;
    
    });
    
        // if form errors are detected, we have to trigger the display of the form modal box
    
        {% if not ecsForm.vars.valid %}
    
            $('#addECSFormModal').modal('show');
    
        {% endif %}



    

    // Reorder ECS capability

    $('#ECSList').sortable({

        animation: 150,

        ghostClass: 'blue-background-class',

        filter: ".disabled",

        onMove: function (evt) {
            return evt.related.className.indexOf('disabled') === -1;
        },

                    
        // reorder ECS positions (drag and drop)

        onEnd: function (evt) {

            // an array storing ECS id position

            var ecsPositions = [];

            
            $('#ECSList div.js-sortableItem').each(function(index){
                
                ecsPositions.push($(this).attr('id'));
        
            });

            jsonECSPositions = JSON.stringify(ecsPositions);
            
            $.ajax({  

                url: "{{path('ajax_reorder_ecs', {'slug': presentation.slug})}}",

                type:       'POST',   

                dataType:   'json',

                data: {

                    "jsonECSPositions": jsonECSPositions,

                },

                async: true,  
                
                success: function(data, status) {
                        
                },  

                error : function(xhr, textStatus, errorThrown) {  
                    // alert('Ajax request failed.');  
                }  
            }); 

        },

    
    });

    
    }); 

</script>
