{% extends 'base.html.twig' %}

{% block title %}Villes du Projet{% endblock %}

{% block sidebar %} {% include 'partials/sidebar.html.twig' %} {% endblock %}


{% block body %}

    <style>

        ul li:hover {
           background-color: rgb(222, 226, 231);
        }

    </style>

    <div class="container pl-md-3">

        <!-- ui Page Title -->

        <h3 class="mt-3 font-weight-bold">Gérer les Villes du Projet</h3>

            
    <!-- collapsable advice -->	

        <button class="btn btn-primary d-block font-weight-bold my-3" type="button" data-toggle="collapse" data-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">

            <span class="h5" style="letter-spacing: 2px;">>  Conseil en 2 sec  <</span>
            
        </button>
        
        <div class="collapse mt-3" id="collapseExample">
                    
            <ul class="h5">

                <li>Si votre projet est relié à des villes ou des départements, vous pouvez les signaler ici.</li>

            </ul>

        </div>






        <!-- Cities Search Bar -->

        <div class="p-0 col-sm-5">

            <form action="">
    
                <div class="form-group mt-2">
    
                    <label class="h5 mb-3 font-weight-bold" for="cityPostalCode">Code Postal ou Ville à Ajouter?</label>
    
                    <input id="ville" name="cityPostalCode" class="form-control h-50 input-lg border border-4 border-primary" placeholder="Entrer un code postal ou un nom de ville">
    
                </div>
    
            </form>
    
            <ul id="cityList" class="list-group cursor-pointer">
    
                <li class="cityItem list-group-item p-2 px-1" data-vicopo="#ville">
                    <strong class="postalCode" data-vicopo-code-postal></strong>
                    <strong class="cityName" data-vicopo-ville></stong>
                </li>
    
            </ul>
  
        </div>

       <!-- Feedback Box -->

        <div id="feedbackBox" class="alert alert-light lh-2 h5 col-sm-9">;-)</div>

        <!-- This Project Cities Table Display -->

        <table id="projectCitiesTable" class="table table-bordered table-hover rounded">

            <thead class="cursor-pointer">
                <tr>
                    <th id="postalCodeHeader">Code Postal</th>
                    <th id="cityNameHeader">Ville</th>
                    <th>Retirer?</th>
                </tr>
            </thead>
    
            <tbody>
    
            {% for city in presentation.geoDomains %}
    
                <tr id="" data-city-id="{{city.id}}" data-city-postal-code="{{city.postalCode}}" data-city-name="{{ city.city}}" class="cityDislayRow cursor-pointer">  
                    
                    
                    <td id="">{{ city.postalCode }}</td>
                    <td id="">{{ city.city | upper }}</td>
                    <td>
                        <button data-id="{{city.id}}" data-cityname="{{ city.city}}" type="button" class="js-remove-city btn btn-danger font-weight-bold" data-dismiss="alert">&times;</button>
                    </td>
                    
                </tr>
                
            {% else %}
                <tr id="noResult">
                    <td colspan="9">Aucune Ville Définie pour ce Projet</td>
                </tr>
            {% endfor %}
    
            </tbody>

        </table>

        <!-- Back Button -->

        <a class="text-decoration-none text-white" href="{{ path('project_show', {'slug': presentation.slug }) }}">
            <button type="button" class="btn btn-info btn-lg font-weight-bold mb-4">Retour</button>
        </a>


    </div>
    
{% endblock %}

{% block javascripts %}

    <script src="/js/vicopoPostalCode.min.js"></script>

    <script>

        $(document).ready(function(){  

            // Petit Plugin pour trier le tableau de villes par nom ou codes postaux

            (function ( $ ) {
             
                $.fn.tableSortHeader = function() {

                    var table = $(this).parents('table').eq(0)
                    var rows = table.find('tr:gt(0)').toArray().sort(comparer($(this).index()))
                    this.asc = !this.asc
                    if (!this.asc){rows = rows.reverse()}
                    for (var i = 0; i < rows.length; i++){table.append(rows[i])}

                    function comparer(index) {
                        return function(a, b) {
                            var valA = getCellValue(a, index), valB = getCellValue(b, index)
                            return $.isNumeric(valA) && $.isNumeric(valB) ? valA - valB : valA.toString().localeCompare(valB)
                        }
                    }

                    function getCellValue(row, index){ return $(row).children('td').eq(index).text() }

                };
             
            }( jQuery ));

            // Chargement de la page : trier le tableau par noms de villes

            $('#projectCitiesTable #cityNameHeader').tableSortHeader();

            // Possibilité de trier le tableau sur clique d'un titre du tableau

            $('#projectCitiesTable').on('click', 'th', function (){
               $(this).tableSortHeader();
            })

            // ajouter une ville

            // reste à faire : avant d'ajouter une ville : vérifier que cette ville n'existe pas déjà (client : ok + serveur (pas encore fait))
           
            $('#cityList').on('click', 'li', function (){

                $('#feedbackBox').html('<div class="loader float-left"></div><span class="h5">Demande en Cours...</span>');

                var postalCode = $(this).children('li .postalCode').html();
                var cityName = $(this).children('li .cityName').html();

                $('#cityList .cityItem').not('li[style*="display: none"]').remove();
                $('#ville').val("");

                var alreadyInserted = false; 

                //check if city is already inserted
                
                $("#projectCitiesTable tbody tr").each(function() {

                    if ($(this).attr('data-city-name') == cityName && $(this).attr('data-city-postal-code') == postalCode){
                        
                        alreadyInserted = true;

                        return;

                    }
                    
                });

                if (alreadyInserted == true){

                    $('#feedbackBox').html("⛔ La Ville "+cityName+" a déjà été Ajoutée");
                    
                    return;
                }

                $.ajax({  
                    url: "{{path('ajax_new_city', {'slug': presentation.slug}) }}",
                    type:       'POST',   
                    dataType:   'json',
                    data: {
                      "postalCode": postalCode,
                      "cityName": cityName,
                    },

                    async: true,  
                    
                    success: function(data, status) {

                        $('#feedbackBox').html("✅ La Ville "+data.cityName+" a été Ajoutée </br>↪ Vous Pouvez Ajouter d'Autres Villes si vous Voulez");
                        
                        //bug à corriger : quand le tbody n'a pas de row (par exemple initialement), le tbody n'a pas de last child, donc les villes ajoutée se concatènent plutôt que de former des rows.

                        //+ ajouter les data-id et data-cityname dans les deux premiers td

                        //+ ajouter l'icône de suppression avec les données appropriées dans le dernier td
                        $('#projectCitiesTable > tbody:last-child').append(
                            '<tr>'
                                +'<td>'+data.postalCode+'</td>'
                                +'<td>'+data.cityName+'</td>'
                                +'<td><button data-id="'+ data.idCityProject+'" data-cityname="'+ data.cityName+'" type="button" class="js-remove-city btn btn-danger font-weight-bold" data-dismiss="alert">&times;</button></td></tr>');
                        
                        $('#noResult').hide();
                       
                    },  

                    error : function(xhr, textStatus, errorThrown) {  
                        // alert('Ajax request failed.');  
                    }  
                 }); 
            });



            // Remove a City

            $('#projectCitiesTable').on('click', '.js-remove-city', function (){

                $('#feedbackBox').html('<div class="loader float-left"></div><span class="h5">Demande en Cours...</span>');

                var idCityProject = $(this).attr("data-id");
                var cityName = $(this).attr("data-cityname");
                //alert(idCityProject);
                //alert(cityName);

                if (confirm("Voulez vous Retirer cette Ville?"))
                {
                    
                $.ajax({  

                    url: "{{path('ajax_remove_city', {'slug': presentation.slug}) }}",
                    type:       'POST',   
                    dataType:   'json',
                    data: {
                      "idCityProject": idCityProject,
                      "cityName": cityName,
                    },

                    async: true,  
                    
                    success: function(data, status) {

                        $('#feedbackBox').html("✅ La Ville "+data.cityName+" a été Retirée de la Présentation");

                        $("#projectCitiesTable").find("[data-id="+ data.idCityProject+"]").closest('tr').remove();

                        //ne fonctionne pas

                        if ($('#projectCitiesTable tbody tr').length == 0){
                            $('#noResult').show();
                        }
                       
                    },  

                    error : function(xhr, textStatus, errorThrown) {  
                        // alert('Ajax request failed.');  
                    }  
                 }); 
                    
                }


            });
             
        });  

    </script>


{% endblock %}